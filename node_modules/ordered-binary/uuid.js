

export function uuid3(uuid, target, position) {
	let int32 = target.int32
	if (!int32)
		int32 = target.int32 = new Int32Array(target.buffer, target.byteOffset, target.byteLength >> 2)
	let c
	let intPosition = position >> 2
	int32[intPosition] =
		(((c = uuid.charCodeAt(0)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(1)) > 90 ? (c - 87) : (c - 48)) |
		(((c = uuid.charCodeAt(2)) > 90 ? (c - 87) : (c - 48)) << 12) |
		(((c = uuid.charCodeAt(3)) > 90 ? (c - 87) : (c - 48)) << 8) |
		(((c = uuid.charCodeAt(4)) > 90 ? (c - 87) : (c - 48)) << 20) |
		(((c = uuid.charCodeAt(5)) > 90 ? (c - 87) : (c - 48)) << 16) |
		(((c = uuid.charCodeAt(6)) > 90 ? (c - 87) : (c - 48)) << 28) |
		(((c = uuid.charCodeAt(7)) > 90 ? (c - 87) : (c - 48)) << 24)
	int32[intPosition + 1] =
		(((c = uuid.charCodeAt(9)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(10)) > 90 ? (c - 87) : (c - 48)) |
		(((c = uuid.charCodeAt(11)) > 90 ? (c - 87) : (c - 48)) << 12) |
		(((c = uuid.charCodeAt(12)) > 90 ? (c - 87) : (c - 48)) << 8) |
		(((c = uuid.charCodeAt(14)) > 90 ? (c - 87) : (c - 48)) << 20) |
		(((c = uuid.charCodeAt(15)) > 90 ? (c - 87) : (c - 48)) << 16) |
		(((c = uuid.charCodeAt(16)) > 90 ? (c - 87) : (c - 48)) << 28) |
		(((c = uuid.charCodeAt(17)) > 90 ? (c - 87) : (c - 48)) << 24)
	int32[intPosition + 2] =
		(((c = uuid.charCodeAt(19)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(20)) > 90 ? (c - 87) : (c - 48)) |
		(((c = uuid.charCodeAt(21)) > 90 ? (c - 87) : (c - 48)) << 12) |
		(((c = uuid.charCodeAt(22)) > 90 ? (c - 87) : (c - 48)) << 8) |
		(((c = uuid.charCodeAt(24)) > 90 ? (c - 87) : (c - 48)) << 20) |
		(((c = uuid.charCodeAt(25)) > 90 ? (c - 87) : (c - 48)) << 16) |
		(((c = uuid.charCodeAt(26)) > 90 ? (c - 87) : (c - 48)) << 28) |
		(((c = uuid.charCodeAt(27)) > 90 ? (c - 87) : (c - 48)) << 24)
	int32[intPosition + 3] =
		(((c = uuid.charCodeAt(28)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(29)) > 90 ? (c - 87) : (c - 48)) |
		(((c = uuid.charCodeAt(30)) > 90 ? (c - 87) : (c - 48)) << 12) |
		(((c = uuid.charCodeAt(31)) > 90 ? (c - 87) : (c - 48)) << 8) |
		(((c = uuid.charCodeAt(32)) > 90 ? (c - 87) : (c - 48)) << 20) |
		(((c = uuid.charCodeAt(33)) > 90 ? (c - 87) : (c - 48)) << 16) |
		(((c = uuid.charCodeAt(34)) > 90 ? (c - 87) : (c - 48)) << 28) |
		(((c = uuid.charCodeAt(35)) > 90 ? (c - 87) : (c - 48)) << 24)

		return position + 16
}

export function uuid2(uuid, target, position) {
	let c
	target[0] =
		(((c = uuid.charCodeAt(0)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(1)) > 90 ? (c - 87) : (c - 48))
	target[1] =
		(((c = uuid.charCodeAt(2)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(3)) > 90 ? (c - 87) : (c - 48))
	target[2] =
		(((c = uuid.charCodeAt(4)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(5)) > 90 ? (c - 87) : (c - 48))
	target[3] =
		(((c = uuid.charCodeAt(6)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(7)) > 90 ? (c - 87) : (c - 48))
	target[4] =
		(((c = uuid.charCodeAt(9)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(10)) > 90 ? (c - 87) : (c - 48))
	target[5] =
		(((c = uuid.charCodeAt(11)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(12)) > 90 ? (c - 87) : (c - 48))
	target[6] =
		(((c = uuid.charCodeAt(14)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(15)) > 90 ? (c - 87) : (c - 48))
	target[7] =
		(((c = uuid.charCodeAt(16)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(17)) > 90 ? (c - 87) : (c - 48))
	target[8] =
		(((c = uuid.charCodeAt(19)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(20)) > 90 ? (c - 87) : (c - 48))
	target[9] =
		(((c = uuid.charCodeAt(21)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(22)) > 90 ? (c - 87) : (c - 48))
	target[10] =
		(((c = uuid.charCodeAt(24)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(25)) > 90 ? (c - 87) : (c - 48))
	target[11] =
		(((c = uuid.charCodeAt(26)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(27)) > 90 ? (c - 87) : (c - 48))
	target[12] =
		(((c = uuid.charCodeAt(28)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(29)) > 90 ? (c - 87) : (c - 48))
	target[13] =
		(((c = uuid.charCodeAt(30)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(31)) > 90 ? (c - 87) : (c - 48))
	target[14] =
		(((c = uuid.charCodeAt(32)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(33)) > 90 ? (c - 87) : (c - 48))
	target[15] =
		(((c = uuid.charCodeAt(34)) > 90 ? (c - 87) : (c - 48)) << 4) |
		((c = uuid.charCodeAt(35)) > 90 ? (c - 87) : (c - 48))


	return position + 16
}
export function uuidReadKey(buffer, start) {
	let c
	String.fromCharCode(
		(c = buffer[0]) < 160 ? ((c >> 4) + 48) : ((c >> 4) + 87),
		(c = c & 0xf) < 10 ? (c + 48) : (c + 87),
		...
		45)
}